#!/bin/bash
SVER='1.0.12'
CONF_FILE="/etc/opt/autogen/autogen.conf"
##############################################################################
# patterns_validate - Validate all new patterns against supportconfigs
# Copyright (C) 2022 SUSE LLC
#
# Description:  Runs new security patterns against supportconfigs in the
#               archive directory using the pat tool.
# Modified:     2022 Oct 01
#
##############################################################################
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, see <http://www.gnu.org/licenses/>.
#
#  Authors/Contributors:
#     Jason Record <jason.record@suse.com>
#
##############################################################################

title() {
	echo "#####################################################"
	echo "#  Validating Proposed SCA Patterns, v${SVER}"
	echo "#####################################################"
}

if [[ -s $CONF_FILE ]]; then
	. $CONF_FILE
else
	clear
	title
	echo "Error: File not found - $CONF_FILE"
	exit 1
fi

LOG="${PAT_LOGS}/validate.log"
CACHE_FILE="${PATDIR_BASE}/_current_pattern_list.txt"
CNT=1
FATALS=0
DUPLICATES=0
TOTAL=$(ls -1 ${PAT_DIR}/*\.py ${PAT_DIR}/*\.pl 2>/dev/null | wc -l)
SIZE=${#TOTAL}
FORMAT="%0${SIZE}d of %0${SIZE}d => %s\n"

log() {
	echo "$@" >> $LOG
}

msg() {
	echo "$@" | tee -a $LOG
}

msgn() {
	printf "$FORMAT" $1 $2 "$3" | tee -a $LOG
}

if [[ -n $1 ]]; then
	BASE="$1"
fi

clear
title
msg "# Validating patterns in ${PAT_DIR}"
#msg "# Use $(basename $0) [/path/to/patterns]"
msg

if (( TOTAL > 0 )); then
	msg "# Generating pre-existing pattern list"
	find ${GITHUB_PATTERN_REPO} -type f | grep /patterns/ &> $CACHE_FILE
	cd $PAT_DIR
	for i in $(ls -1 ${PAT_DIR}/*\.py ${PAT_DIR}/*\.pl 2>/dev/null)
	do
		#echo "$i => $CNT of $TOTAL"
		#printf "$FORMAT" $CNT $TOTAL "$i"
		msgn $CNT $TOTAL "$i"
		FILE=$(basename $i)
		if grep ${FILE} ${CACHE_FILE} &> /dev/null; then
			msg Duplicate
			mv $i $PAT_DUPS
			(( DUPLICATES++ ))
		else
			OUTPUT=$(pat $i 2>/dev/null | grep Fatal\:)
			RESULT=$(echo "$OUTPUT" | awk '{print $2}' | cut -d\, -f1)
			if (( RESULT > 0 )); then
				(( FATALS++ ))
				msg "$OUTPUT"
				mv $i $PAT_ERROR
			fi
#			echo "$OUTPUT"
		fi
		(( CNT++ ))
	done
	msg
	msg "Invalid Patterns:  $FATALS"
	msg "Dulicate Patterns: $DUPLICATES"
else
	msg "No patterns available for validation, run chksecurity"
fi
rm -f $CACHE_FILE
msg

